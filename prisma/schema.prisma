// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid())
  firstName     String
  lastName      String
  email         String    @unique
  password      String
  image         String?
  emailVerified DateTime?
  Account       Account[]
  expenses      Expense[]
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

enum ExpenseStatus {
  UNREPORTED
  REPORTED
  APPROVED
  REJECTED
  REIMBURSED
}

enum ExpenseCategory {
  TRAVEL
  MEALS
  ACCOMMODATION
  SUPPLIES
  SERVICES
  ENTERTAINMENT
  TRANSPORTATION
  UTILITIES
  OFFICE
  OTHER
}

model Expense {
  id          Int             @id @default(autoincrement())
  amount      Float
  date        DateTime
  description String
  category    ExpenseCategory @default(OTHER)
  status      ExpenseStatus   @default(UNREPORTED)
  receiptUrl  String?
  notes       String?
  userId      String
  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}
